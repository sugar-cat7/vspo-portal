// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
)

type ApiKeyAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKeyAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKeyAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/ChannelPlatformSnippet
type ChannelPlatformSnippet struct {
	ChannelID    OptString `json:"channel_id"`
	Name         OptString `json:"name"`
	Description  OptString `json:"description"`
	ThumbnailURL OptString `json:"thumbnail_url"`
}

// GetChannelID returns the value of ChannelID.
func (s *ChannelPlatformSnippet) GetChannelID() OptString {
	return s.ChannelID
}

// GetName returns the value of Name.
func (s *ChannelPlatformSnippet) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ChannelPlatformSnippet) GetDescription() OptString {
	return s.Description
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *ChannelPlatformSnippet) GetThumbnailURL() OptString {
	return s.ThumbnailURL
}

// SetChannelID sets the value of ChannelID.
func (s *ChannelPlatformSnippet) SetChannelID(val OptString) {
	s.ChannelID = val
}

// SetName sets the value of Name.
func (s *ChannelPlatformSnippet) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ChannelPlatformSnippet) SetDescription(val OptString) {
	s.Description = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *ChannelPlatformSnippet) SetThumbnailURL(val OptString) {
	s.ThumbnailURL = val
}

// Ref: #/components/schemas/ChannelResponse
type ChannelResponse struct {
	Youtube     OptChannelPlatformSnippet `json:"youtube"`
	Twitch      OptChannelPlatformSnippet `json:"twitch"`
	TwitCasting OptChannelPlatformSnippet `json:"twitCasting"`
	Niconico    OptChannelPlatformSnippet `json:"niconico"`
}

// GetYoutube returns the value of Youtube.
func (s *ChannelResponse) GetYoutube() OptChannelPlatformSnippet {
	return s.Youtube
}

// GetTwitch returns the value of Twitch.
func (s *ChannelResponse) GetTwitch() OptChannelPlatformSnippet {
	return s.Twitch
}

// GetTwitCasting returns the value of TwitCasting.
func (s *ChannelResponse) GetTwitCasting() OptChannelPlatformSnippet {
	return s.TwitCasting
}

// GetNiconico returns the value of Niconico.
func (s *ChannelResponse) GetNiconico() OptChannelPlatformSnippet {
	return s.Niconico
}

// SetYoutube sets the value of Youtube.
func (s *ChannelResponse) SetYoutube(val OptChannelPlatformSnippet) {
	s.Youtube = val
}

// SetTwitch sets the value of Twitch.
func (s *ChannelResponse) SetTwitch(val OptChannelPlatformSnippet) {
	s.Twitch = val
}

// SetTwitCasting sets the value of TwitCasting.
func (s *ChannelResponse) SetTwitCasting(val OptChannelPlatformSnippet) {
	s.TwitCasting = val
}

// SetNiconico sets the value of Niconico.
func (s *ChannelResponse) SetNiconico(val OptChannelPlatformSnippet) {
	s.Niconico = val
}

// Ref: #/components/schemas/CreatorResponse
type CreatorResponse struct {
	CreatorID   OptString          `json:"creator_id"`
	CreatorName OptString          `json:"creator_name"`
	ChannelInfo OptChannelResponse `json:"channel_info"`
}

// GetCreatorID returns the value of CreatorID.
func (s *CreatorResponse) GetCreatorID() OptString {
	return s.CreatorID
}

// GetCreatorName returns the value of CreatorName.
func (s *CreatorResponse) GetCreatorName() OptString {
	return s.CreatorName
}

// GetChannelInfo returns the value of ChannelInfo.
func (s *CreatorResponse) GetChannelInfo() OptChannelResponse {
	return s.ChannelInfo
}

// SetCreatorID sets the value of CreatorID.
func (s *CreatorResponse) SetCreatorID(val OptString) {
	s.CreatorID = val
}

// SetCreatorName sets the value of CreatorName.
func (s *CreatorResponse) SetCreatorName(val OptString) {
	s.CreatorName = val
}

// SetChannelInfo sets the value of ChannelInfo.
func (s *CreatorResponse) SetChannelInfo(val OptChannelResponse) {
	s.ChannelInfo = val
}

// CreatorsGetBadRequest is response for CreatorsGet operation.
type CreatorsGetBadRequest struct{}

func (*CreatorsGetBadRequest) creatorsGetRes() {}

type CreatorsGetCreatorType string

const (
	CreatorsGetCreatorTypeVspo CreatorsGetCreatorType = "vspo"
)

// AllValues returns all CreatorsGetCreatorType values.
func (CreatorsGetCreatorType) AllValues() []CreatorsGetCreatorType {
	return []CreatorsGetCreatorType{
		CreatorsGetCreatorTypeVspo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreatorsGetCreatorType) MarshalText() ([]byte, error) {
	switch s {
	case CreatorsGetCreatorTypeVspo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreatorsGetCreatorType) UnmarshalText(data []byte) error {
	switch CreatorsGetCreatorType(data) {
	case CreatorsGetCreatorTypeVspo:
		*s = CreatorsGetCreatorTypeVspo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// CreatorsGetForbidden is response for CreatorsGet operation.
type CreatorsGetForbidden struct{}

func (*CreatorsGetForbidden) creatorsGetRes() {}

// CreatorsGetInternalServerError is response for CreatorsGet operation.
type CreatorsGetInternalServerError struct{}

func (*CreatorsGetInternalServerError) creatorsGetRes() {}

// CreatorsGetNotFound is response for CreatorsGet operation.
type CreatorsGetNotFound struct{}

func (*CreatorsGetNotFound) creatorsGetRes() {}

// CreatorsGetUnauthorized is response for CreatorsGet operation.
type CreatorsGetUnauthorized struct{}

func (*CreatorsGetUnauthorized) creatorsGetRes() {}

// Ref: #/components/schemas/CreatorsResponse
type CreatorsResponse struct {
	Creators   []CreatorResponse `json:"creators"`
	Pagination OptPagination     `json:"pagination"`
}

// GetCreators returns the value of Creators.
func (s *CreatorsResponse) GetCreators() []CreatorResponse {
	return s.Creators
}

// GetPagination returns the value of Pagination.
func (s *CreatorsResponse) GetPagination() OptPagination {
	return s.Pagination
}

// SetCreators sets the value of Creators.
func (s *CreatorsResponse) SetCreators(val []CreatorResponse) {
	s.Creators = val
}

// SetPagination sets the value of Pagination.
func (s *CreatorsResponse) SetPagination(val OptPagination) {
	s.Pagination = val
}

func (*CreatorsResponse) creatorsGetRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChannelPlatformSnippet returns new OptChannelPlatformSnippet with value set to v.
func NewOptChannelPlatformSnippet(v ChannelPlatformSnippet) OptChannelPlatformSnippet {
	return OptChannelPlatformSnippet{
		Value: v,
		Set:   true,
	}
}

// OptChannelPlatformSnippet is optional ChannelPlatformSnippet.
type OptChannelPlatformSnippet struct {
	Value ChannelPlatformSnippet
	Set   bool
}

// IsSet returns true if OptChannelPlatformSnippet was set.
func (o OptChannelPlatformSnippet) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChannelPlatformSnippet) Reset() {
	var v ChannelPlatformSnippet
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChannelPlatformSnippet) SetTo(v ChannelPlatformSnippet) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChannelPlatformSnippet) Get() (v ChannelPlatformSnippet, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChannelPlatformSnippet) Or(d ChannelPlatformSnippet) ChannelPlatformSnippet {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChannelResponse returns new OptChannelResponse with value set to v.
func NewOptChannelResponse(v ChannelResponse) OptChannelResponse {
	return OptChannelResponse{
		Value: v,
		Set:   true,
	}
}

// OptChannelResponse is optional ChannelResponse.
type OptChannelResponse struct {
	Value ChannelResponse
	Set   bool
}

// IsSet returns true if OptChannelResponse was set.
func (o OptChannelResponse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChannelResponse) Reset() {
	var v ChannelResponse
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChannelResponse) SetTo(v ChannelResponse) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChannelResponse) Get() (v ChannelResponse, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChannelResponse) Or(d ChannelResponse) ChannelResponse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreatorsGetCreatorType returns new OptCreatorsGetCreatorType with value set to v.
func NewOptCreatorsGetCreatorType(v CreatorsGetCreatorType) OptCreatorsGetCreatorType {
	return OptCreatorsGetCreatorType{
		Value: v,
		Set:   true,
	}
}

// OptCreatorsGetCreatorType is optional CreatorsGetCreatorType.
type OptCreatorsGetCreatorType struct {
	Value CreatorsGetCreatorType
	Set   bool
}

// IsSet returns true if OptCreatorsGetCreatorType was set.
func (o OptCreatorsGetCreatorType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreatorsGetCreatorType) Reset() {
	var v CreatorsGetCreatorType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreatorsGetCreatorType) SetTo(v CreatorsGetCreatorType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreatorsGetCreatorType) Get() (v CreatorsGetCreatorType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreatorsGetCreatorType) Or(d CreatorsGetCreatorType) CreatorsGetCreatorType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPagination returns new OptPagination with value set to v.
func NewOptPagination(v Pagination) OptPagination {
	return OptPagination{
		Value: v,
		Set:   true,
	}
}

// OptPagination is optional Pagination.
type OptPagination struct {
	Value Pagination
	Set   bool
}

// IsSet returns true if OptPagination was set.
func (o OptPagination) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagination) Reset() {
	var v Pagination
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagination) SetTo(v Pagination) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagination) Get() (v Pagination, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPagination) Or(d Pagination) Pagination {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVideoResponseCreatorInfo returns new OptVideoResponseCreatorInfo with value set to v.
func NewOptVideoResponseCreatorInfo(v VideoResponseCreatorInfo) OptVideoResponseCreatorInfo {
	return OptVideoResponseCreatorInfo{
		Value: v,
		Set:   true,
	}
}

// OptVideoResponseCreatorInfo is optional VideoResponseCreatorInfo.
type OptVideoResponseCreatorInfo struct {
	Value VideoResponseCreatorInfo
	Set   bool
}

// IsSet returns true if OptVideoResponseCreatorInfo was set.
func (o OptVideoResponseCreatorInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideoResponseCreatorInfo) Reset() {
	var v VideoResponseCreatorInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideoResponseCreatorInfo) SetTo(v VideoResponseCreatorInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideoResponseCreatorInfo) Get() (v VideoResponseCreatorInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVideoResponseCreatorInfo) Or(d VideoResponseCreatorInfo) VideoResponseCreatorInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVideoResponsePlatform returns new OptVideoResponsePlatform with value set to v.
func NewOptVideoResponsePlatform(v VideoResponsePlatform) OptVideoResponsePlatform {
	return OptVideoResponsePlatform{
		Value: v,
		Set:   true,
	}
}

// OptVideoResponsePlatform is optional VideoResponsePlatform.
type OptVideoResponsePlatform struct {
	Value VideoResponsePlatform
	Set   bool
}

// IsSet returns true if OptVideoResponsePlatform was set.
func (o OptVideoResponsePlatform) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideoResponsePlatform) Reset() {
	var v VideoResponsePlatform
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideoResponsePlatform) SetTo(v VideoResponsePlatform) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideoResponsePlatform) Get() (v VideoResponsePlatform, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVideoResponsePlatform) Or(d VideoResponsePlatform) VideoResponsePlatform {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVideosGetPeriod returns new OptVideosGetPeriod with value set to v.
func NewOptVideosGetPeriod(v VideosGetPeriod) OptVideosGetPeriod {
	return OptVideosGetPeriod{
		Value: v,
		Set:   true,
	}
}

// OptVideosGetPeriod is optional VideosGetPeriod.
type OptVideosGetPeriod struct {
	Value VideosGetPeriod
	Set   bool
}

// IsSet returns true if OptVideosGetPeriod was set.
func (o OptVideosGetPeriod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideosGetPeriod) Reset() {
	var v VideosGetPeriod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideosGetPeriod) SetTo(v VideosGetPeriod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideosGetPeriod) Get() (v VideosGetPeriod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVideosGetPeriod) Or(d VideosGetPeriod) VideosGetPeriod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVideosGetSort returns new OptVideosGetSort with value set to v.
func NewOptVideosGetSort(v VideosGetSort) OptVideosGetSort {
	return OptVideosGetSort{
		Value: v,
		Set:   true,
	}
}

// OptVideosGetSort is optional VideosGetSort.
type OptVideosGetSort struct {
	Value VideosGetSort
	Set   bool
}

// IsSet returns true if OptVideosGetSort was set.
func (o OptVideosGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideosGetSort) Reset() {
	var v VideosGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideosGetSort) SetTo(v VideosGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideosGetSort) Get() (v VideosGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVideosGetSort) Or(d VideosGetSort) VideosGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptViewsResponse returns new OptViewsResponse with value set to v.
func NewOptViewsResponse(v ViewsResponse) OptViewsResponse {
	return OptViewsResponse{
		Value: v,
		Set:   true,
	}
}

// OptViewsResponse is optional ViewsResponse.
type OptViewsResponse struct {
	Value ViewsResponse
	Set   bool
}

// IsSet returns true if OptViewsResponse was set.
func (o OptViewsResponse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptViewsResponse) Reset() {
	var v ViewsResponse
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptViewsResponse) SetTo(v ViewsResponse) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptViewsResponse) Get() (v ViewsResponse, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptViewsResponse) Or(d ViewsResponse) ViewsResponse {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Pagination
type Pagination struct {
	CurrentPage OptInt64 `json:"currentPage"`
	PrevPage    OptInt64 `json:"prevPage"`
	NextPage    OptInt64 `json:"nextPage"`
	TotalPage   OptInt64 `json:"totalPage"`
	TotalCount  OptInt64 `json:"totalCount"`
	HasNext     OptBool  `json:"hasNext"`
}

// GetCurrentPage returns the value of CurrentPage.
func (s *Pagination) GetCurrentPage() OptInt64 {
	return s.CurrentPage
}

// GetPrevPage returns the value of PrevPage.
func (s *Pagination) GetPrevPage() OptInt64 {
	return s.PrevPage
}

// GetNextPage returns the value of NextPage.
func (s *Pagination) GetNextPage() OptInt64 {
	return s.NextPage
}

// GetTotalPage returns the value of TotalPage.
func (s *Pagination) GetTotalPage() OptInt64 {
	return s.TotalPage
}

// GetTotalCount returns the value of TotalCount.
func (s *Pagination) GetTotalCount() OptInt64 {
	return s.TotalCount
}

// GetHasNext returns the value of HasNext.
func (s *Pagination) GetHasNext() OptBool {
	return s.HasNext
}

// SetCurrentPage sets the value of CurrentPage.
func (s *Pagination) SetCurrentPage(val OptInt64) {
	s.CurrentPage = val
}

// SetPrevPage sets the value of PrevPage.
func (s *Pagination) SetPrevPage(val OptInt64) {
	s.PrevPage = val
}

// SetNextPage sets the value of NextPage.
func (s *Pagination) SetNextPage(val OptInt64) {
	s.NextPage = val
}

// SetTotalPage sets the value of TotalPage.
func (s *Pagination) SetTotalPage(val OptInt64) {
	s.TotalPage = val
}

// SetTotalCount sets the value of TotalCount.
func (s *Pagination) SetTotalCount(val OptInt64) {
	s.TotalCount = val
}

// SetHasNext sets the value of HasNext.
func (s *Pagination) SetHasNext(val OptBool) {
	s.HasNext = val
}

// Ref: #/components/schemas/VideoResponse
type VideoResponse struct {
	VideoID      OptString                   `json:"video_id"`
	Title        OptString                   `json:"title"`
	Description  OptString                   `json:"description"`
	PublishedAt  OptDateTime                 `json:"published_at"`
	StartedAt    OptDateTime                 `json:"started_at"`
	EndedAt      OptDateTime                 `json:"ended_at"`
	Tags         []string                    `json:"tags"`
	ThumbnailURL OptString                   `json:"thumbnail_url"`
	Platform     OptVideoResponsePlatform    `json:"platform"`
	Views        OptViewsResponse            `json:"views"`
	CreatorInfo  OptVideoResponseCreatorInfo `json:"creator_info"`
}

// GetVideoID returns the value of VideoID.
func (s *VideoResponse) GetVideoID() OptString {
	return s.VideoID
}

// GetTitle returns the value of Title.
func (s *VideoResponse) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *VideoResponse) GetDescription() OptString {
	return s.Description
}

// GetPublishedAt returns the value of PublishedAt.
func (s *VideoResponse) GetPublishedAt() OptDateTime {
	return s.PublishedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *VideoResponse) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetEndedAt returns the value of EndedAt.
func (s *VideoResponse) GetEndedAt() OptDateTime {
	return s.EndedAt
}

// GetTags returns the value of Tags.
func (s *VideoResponse) GetTags() []string {
	return s.Tags
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *VideoResponse) GetThumbnailURL() OptString {
	return s.ThumbnailURL
}

// GetPlatform returns the value of Platform.
func (s *VideoResponse) GetPlatform() OptVideoResponsePlatform {
	return s.Platform
}

// GetViews returns the value of Views.
func (s *VideoResponse) GetViews() OptViewsResponse {
	return s.Views
}

// GetCreatorInfo returns the value of CreatorInfo.
func (s *VideoResponse) GetCreatorInfo() OptVideoResponseCreatorInfo {
	return s.CreatorInfo
}

// SetVideoID sets the value of VideoID.
func (s *VideoResponse) SetVideoID(val OptString) {
	s.VideoID = val
}

// SetTitle sets the value of Title.
func (s *VideoResponse) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *VideoResponse) SetDescription(val OptString) {
	s.Description = val
}

// SetPublishedAt sets the value of PublishedAt.
func (s *VideoResponse) SetPublishedAt(val OptDateTime) {
	s.PublishedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *VideoResponse) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetEndedAt sets the value of EndedAt.
func (s *VideoResponse) SetEndedAt(val OptDateTime) {
	s.EndedAt = val
}

// SetTags sets the value of Tags.
func (s *VideoResponse) SetTags(val []string) {
	s.Tags = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *VideoResponse) SetThumbnailURL(val OptString) {
	s.ThumbnailURL = val
}

// SetPlatform sets the value of Platform.
func (s *VideoResponse) SetPlatform(val OptVideoResponsePlatform) {
	s.Platform = val
}

// SetViews sets the value of Views.
func (s *VideoResponse) SetViews(val OptViewsResponse) {
	s.Views = val
}

// SetCreatorInfo sets the value of CreatorInfo.
func (s *VideoResponse) SetCreatorInfo(val OptVideoResponseCreatorInfo) {
	s.CreatorInfo = val
}

type VideoResponseCreatorInfo struct {
	CreatorID    OptString `json:"creator_id"`
	CreatorName  OptString `json:"creator_name"`
	ThumbnailURL OptString `json:"thumbnail_url"`
}

// GetCreatorID returns the value of CreatorID.
func (s *VideoResponseCreatorInfo) GetCreatorID() OptString {
	return s.CreatorID
}

// GetCreatorName returns the value of CreatorName.
func (s *VideoResponseCreatorInfo) GetCreatorName() OptString {
	return s.CreatorName
}

// GetThumbnailURL returns the value of ThumbnailURL.
func (s *VideoResponseCreatorInfo) GetThumbnailURL() OptString {
	return s.ThumbnailURL
}

// SetCreatorID sets the value of CreatorID.
func (s *VideoResponseCreatorInfo) SetCreatorID(val OptString) {
	s.CreatorID = val
}

// SetCreatorName sets the value of CreatorName.
func (s *VideoResponseCreatorInfo) SetCreatorName(val OptString) {
	s.CreatorName = val
}

// SetThumbnailURL sets the value of ThumbnailURL.
func (s *VideoResponseCreatorInfo) SetThumbnailURL(val OptString) {
	s.ThumbnailURL = val
}

type VideoResponsePlatform string

const (
	VideoResponsePlatformYoutube     VideoResponsePlatform = "youtube"
	VideoResponsePlatformTwitch      VideoResponsePlatform = "twitch"
	VideoResponsePlatformTwitcasting VideoResponsePlatform = "twitcasting"
	VideoResponsePlatformNiconico    VideoResponsePlatform = "niconico"
	VideoResponsePlatformUnknown     VideoResponsePlatform = "unknown"
)

// AllValues returns all VideoResponsePlatform values.
func (VideoResponsePlatform) AllValues() []VideoResponsePlatform {
	return []VideoResponsePlatform{
		VideoResponsePlatformYoutube,
		VideoResponsePlatformTwitch,
		VideoResponsePlatformTwitcasting,
		VideoResponsePlatformNiconico,
		VideoResponsePlatformUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VideoResponsePlatform) MarshalText() ([]byte, error) {
	switch s {
	case VideoResponsePlatformYoutube:
		return []byte(s), nil
	case VideoResponsePlatformTwitch:
		return []byte(s), nil
	case VideoResponsePlatformTwitcasting:
		return []byte(s), nil
	case VideoResponsePlatformNiconico:
		return []byte(s), nil
	case VideoResponsePlatformUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VideoResponsePlatform) UnmarshalText(data []byte) error {
	switch VideoResponsePlatform(data) {
	case VideoResponsePlatformYoutube:
		*s = VideoResponsePlatformYoutube
		return nil
	case VideoResponsePlatformTwitch:
		*s = VideoResponsePlatformTwitch
		return nil
	case VideoResponsePlatformTwitcasting:
		*s = VideoResponsePlatformTwitcasting
		return nil
	case VideoResponsePlatformNiconico:
		*s = VideoResponsePlatformNiconico
		return nil
	case VideoResponsePlatformUnknown:
		*s = VideoResponsePlatformUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// VideosGetBadRequest is response for VideosGet operation.
type VideosGetBadRequest struct{}

func (*VideosGetBadRequest) videosGetRes() {}

// VideosGetForbidden is response for VideosGet operation.
type VideosGetForbidden struct{}

func (*VideosGetForbidden) videosGetRes() {}

// VideosGetInternalServerError is response for VideosGet operation.
type VideosGetInternalServerError struct{}

func (*VideosGetInternalServerError) videosGetRes() {}

// VideosGetNotFound is response for VideosGet operation.
type VideosGetNotFound struct{}

func (*VideosGetNotFound) videosGetRes() {}

type VideosGetPeriod string

const (
	VideosGetPeriodDay   VideosGetPeriod = "day"
	VideosGetPeriodMonth VideosGetPeriod = "month"
	VideosGetPeriodWeek  VideosGetPeriod = "week"
)

// AllValues returns all VideosGetPeriod values.
func (VideosGetPeriod) AllValues() []VideosGetPeriod {
	return []VideosGetPeriod{
		VideosGetPeriodDay,
		VideosGetPeriodMonth,
		VideosGetPeriodWeek,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VideosGetPeriod) MarshalText() ([]byte, error) {
	switch s {
	case VideosGetPeriodDay:
		return []byte(s), nil
	case VideosGetPeriodMonth:
		return []byte(s), nil
	case VideosGetPeriodWeek:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VideosGetPeriod) UnmarshalText(data []byte) error {
	switch VideosGetPeriod(data) {
	case VideosGetPeriodDay:
		*s = VideosGetPeriodDay
		return nil
	case VideosGetPeriodMonth:
		*s = VideosGetPeriodMonth
		return nil
	case VideosGetPeriodWeek:
		*s = VideosGetPeriodWeek
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type VideosGetSort string

const (
	VideosGetSortTime     VideosGetSort = "time"
	VideosGetSortTrending VideosGetSort = "trending"
	VideosGetSortViews    VideosGetSort = "views"
)

// AllValues returns all VideosGetSort values.
func (VideosGetSort) AllValues() []VideosGetSort {
	return []VideosGetSort{
		VideosGetSortTime,
		VideosGetSortTrending,
		VideosGetSortViews,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VideosGetSort) MarshalText() ([]byte, error) {
	switch s {
	case VideosGetSortTime:
		return []byte(s), nil
	case VideosGetSortTrending:
		return []byte(s), nil
	case VideosGetSortViews:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VideosGetSort) UnmarshalText(data []byte) error {
	switch VideosGetSort(data) {
	case VideosGetSortTime:
		*s = VideosGetSortTime
		return nil
	case VideosGetSortTrending:
		*s = VideosGetSortTrending
		return nil
	case VideosGetSortViews:
		*s = VideosGetSortViews
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// VideosGetUnauthorized is response for VideosGet operation.
type VideosGetUnauthorized struct{}

func (*VideosGetUnauthorized) videosGetRes() {}

// VideosPostBadRequest is response for VideosPost operation.
type VideosPostBadRequest struct{}

func (*VideosPostBadRequest) videosPostRes() {}

// VideosPostForbidden is response for VideosPost operation.
type VideosPostForbidden struct{}

func (*VideosPostForbidden) videosPostRes() {}

// VideosPostInternalServerError is response for VideosPost operation.
type VideosPostInternalServerError struct{}

func (*VideosPostInternalServerError) videosPostRes() {}

// VideosPostNotFound is response for VideosPost operation.
type VideosPostNotFound struct{}

func (*VideosPostNotFound) videosPostRes() {}

type VideosPostReq struct {
	// Array of YouTube Video IDs.
	VideoIds []string `json:"video_ids"`
}

// GetVideoIds returns the value of VideoIds.
func (s *VideosPostReq) GetVideoIds() []string {
	return s.VideoIds
}

// SetVideoIds sets the value of VideoIds.
func (s *VideosPostReq) SetVideoIds(val []string) {
	s.VideoIds = val
}

// VideosPostUnauthorized is response for VideosPost operation.
type VideosPostUnauthorized struct{}

func (*VideosPostUnauthorized) videosPostRes() {}

// VideosPutBadRequest is response for VideosPut operation.
type VideosPutBadRequest struct{}

func (*VideosPutBadRequest) videosPutRes() {}

// VideosPutForbidden is response for VideosPut operation.
type VideosPutForbidden struct{}

func (*VideosPutForbidden) videosPutRes() {}

// VideosPutInternalServerError is response for VideosPut operation.
type VideosPutInternalServerError struct{}

func (*VideosPutInternalServerError) videosPutRes() {}

// VideosPutNotFound is response for VideosPut operation.
type VideosPutNotFound struct{}

func (*VideosPutNotFound) videosPutRes() {}

type VideosPutReq struct {
	// Array of YouTube Video IDs.
	VideoIds []string `json:"video_ids"`
}

// GetVideoIds returns the value of VideoIds.
func (s *VideosPutReq) GetVideoIds() []string {
	return s.VideoIds
}

// SetVideoIds sets the value of VideoIds.
func (s *VideosPutReq) SetVideoIds(val []string) {
	s.VideoIds = val
}

// VideosPutUnauthorized is response for VideosPut operation.
type VideosPutUnauthorized struct{}

func (*VideosPutUnauthorized) videosPutRes() {}

// Ref: #/components/schemas/VideosResponse
type VideosResponse struct {
	Videos     []VideoResponse `json:"videos"`
	Pagination OptPagination   `json:"pagination"`
}

// GetVideos returns the value of Videos.
func (s *VideosResponse) GetVideos() []VideoResponse {
	return s.Videos
}

// GetPagination returns the value of Pagination.
func (s *VideosResponse) GetPagination() OptPagination {
	return s.Pagination
}

// SetVideos sets the value of Videos.
func (s *VideosResponse) SetVideos(val []VideoResponse) {
	s.Videos = val
}

// SetPagination sets the value of Pagination.
func (s *VideosResponse) SetPagination(val OptPagination) {
	s.Pagination = val
}

func (*VideosResponse) videosGetRes()  {}
func (*VideosResponse) videosPostRes() {}
func (*VideosResponse) videosPutRes()  {}

// Ref: #/components/schemas/ViewsResponse
type ViewsResponse struct {
	Daily   OptString `json:"daily"`
	Monthly OptString `json:"monthly"`
	Total   OptString `json:"total"`
	Weekly  OptString `json:"weekly"`
}

// GetDaily returns the value of Daily.
func (s *ViewsResponse) GetDaily() OptString {
	return s.Daily
}

// GetMonthly returns the value of Monthly.
func (s *ViewsResponse) GetMonthly() OptString {
	return s.Monthly
}

// GetTotal returns the value of Total.
func (s *ViewsResponse) GetTotal() OptString {
	return s.Total
}

// GetWeekly returns the value of Weekly.
func (s *ViewsResponse) GetWeekly() OptString {
	return s.Weekly
}

// SetDaily sets the value of Daily.
func (s *ViewsResponse) SetDaily(val OptString) {
	s.Daily = val
}

// SetMonthly sets the value of Monthly.
func (s *ViewsResponse) SetMonthly(val OptString) {
	s.Monthly = val
}

// SetTotal sets the value of Total.
func (s *ViewsResponse) SetTotal(val OptString) {
	s.Total = val
}

// SetWeekly sets the value of Weekly.
func (s *ViewsResponse) SetWeekly(val OptString) {
	s.Weekly = val
}
