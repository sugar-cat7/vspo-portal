{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "api",
    "description": "API"
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "ErrBadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["BAD_REQUEST"],
                "description": "A machine readable error code.",
                "example": "BAD_REQUEST"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrUnauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["UNAUTHORIZED"],
                "description": "A machine readable error code.",
                "example": "UNAUTHORIZED"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrForbidden": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["FORBIDDEN"],
                "description": "A machine readable error code.",
                "example": "FORBIDDEN"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrNotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["NOT_FOUND"],
                "description": "A machine readable error code.",
                "example": "NOT_FOUND"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrConflict": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["CONFLICT"],
                "description": "A machine readable error code.",
                "example": "CONFLICT"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrTooManyRequests": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["TOO_MANY_REQUESTS"],
                "description": "A machine readable error code.",
                "example": "TOO_MANY_REQUESTS"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrInternalServerError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["INTERNAL_SERVER_ERROR"],
                "description": "A machine readable error code.",
                "example": "INTERNAL_SERVER_ERROR"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://example.com/docs"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/streams": {
      "get": {
        "tags": ["Stream"],
        "operationId": "listStreams",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Maximum number of items to retrieve per page",
              "example": "10"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Page number to start retrieving items(starts from 1)",
              "example": "1"
            },
            "required": true,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "youtube",
                "twitch",
                "twitcasting",
                "niconico",
                "unknown"
              ],
              "description": "Platform",
              "example": "youtube"
            },
            "required": false,
            "name": "platform",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["live", "upcoming", "ended", "unknown"],
              "description": "Status",
              "example": "live"
            },
            "required": false,
            "name": "status",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["vspo_jp", "vspo_en", "vspo_ch", "vspo_all", "general"],
              "description": "Member Type",
              "example": "vspo_all"
            },
            "required": false,
            "name": "memberType",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Started At",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "required": false,
            "name": "startedAt",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Ended At",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "required": false,
            "name": "endedAt",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "default",
              "description": "Language Code",
              "example": "en"
            },
            "required": false,
            "name": "languageCode",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc",
              "description": "Order By",
              "example": "desc"
            },
            "required": false,
            "name": "orderBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The configuration for an api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "streams": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "rawId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "languageCode": {
                            "type": "string",
                            "enum": [
                              "en",
                              "ja",
                              "fr",
                              "de",
                              "es",
                              "cn",
                              "tw",
                              "ko",
                              "default"
                            ]
                          },
                          "rawChannelID": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "youtube",
                              "twitch",
                              "twitcasting",
                              "niconico",
                              "unknown"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "thumbnailURL": {
                            "type": "string"
                          },
                          "creatorName": {
                            "type": "string"
                          },
                          "creatorThumbnailURL": {
                            "type": "string"
                          },
                          "viewCount": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "link": {
                            "type": "string"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false
                          },
                          "translated": {
                            "type": "boolean"
                          },
                          "status": {
                            "type": "string",
                            "enum": ["live", "upcoming", "ended", "unknown"]
                          },
                          "startedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          },
                          "endedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "rawId",
                          "title",
                          "languageCode",
                          "rawChannelID",
                          "description",
                          "publishedAt",
                          "platform",
                          "tags",
                          "thumbnailURL",
                          "viewCount",
                          "status",
                          "startedAt",
                          "endedAt"
                        ],
                        "description": "Stream",
                        "example": {
                          "id": "O0XCK3NhzqE",
                          "rawId": "O0XCK3NhzqE",
                          "title": "【APEX】ランドマークは溶岩になった！！#三清傑WIN w/まつりちゃん,えるちゃん【ぶいすぽっ！/ 藍沢エマ】",
                          "languageCode": "ja",
                          "rawChannelID": "UCPkKpOHxEDcwmUAnRpIu-Ng",
                          "description": "ぶいすぽっ！所属の藍沢エマです！\nApexの配信をします！\nチャンネル登録、高評価よろしくお願いします！",
                          "publishedAt": "2023-05-20T12:00:00.000Z",
                          "startedAt": "2023-05-20T12:00:00.000Z",
                          "endedAt": "2023-05-20T15:30:00.000Z",
                          "platform": "youtube",
                          "status": "ended",
                          "tags": [
                            "APEX",
                            "ぶいすぽっ！",
                            "藍沢エマ",
                            "三清傑"
                          ],
                          "viewCount": 125000,
                          "thumbnailURL": "https://i.ytimg.com/vi/O0XCK3NhzqE/hqdefault_live.jpg",
                          "creatorName": "藍沢エマ",
                          "creatorThumbnailURL": "https://yt3.googleusercontent.com/oIps6UVvqtpJykcdjYYyRvhdcyVoR1wAdH8CnTp4msMaKYdn8XMLj4FHsLoqfWaJzbLJKSPjCg=s176-c-k-c0x00ffffff-no-rj",
                          "deleted": false,
                          "translated": false
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer",
                          "description": "Current Page",
                          "example": 1
                        },
                        "prevPage": {
                          "type": "integer",
                          "description": "Previous Page",
                          "example": 1
                        },
                        "nextPage": {
                          "type": "integer",
                          "description": "Next Page",
                          "example": 1
                        },
                        "totalPage": {
                          "type": "integer",
                          "description": "Total Pages",
                          "example": 1
                        },
                        "totalCount": {
                          "type": "integer",
                          "description": "Total Count",
                          "example": 1
                        },
                        "hasNext": {
                          "type": "boolean",
                          "description": "Has Next",
                          "example": true
                        }
                      },
                      "required": [
                        "currentPage",
                        "totalPage",
                        "totalCount",
                        "hasNext"
                      ]
                    }
                  },
                  "required": ["streams", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/creators": {
      "get": {
        "tags": ["Creator"],
        "operationId": "listCreators",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Maximum number of items to retrieve per page",
              "example": "10"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Page number to start retrieving items(starts from 1)",
              "example": "1"
            },
            "required": true,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["vspo_jp", "vspo_en", "vspo_ch", "general"]
            },
            "required": false,
            "name": "memberType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The configuration for an api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creators": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "memberType": {
                            "type": "string",
                            "enum": ["vspo_jp", "vspo_en", "vspo_ch", "general"]
                          },
                          "thumbnailURL": {
                            "type": "string"
                          },
                          "channel": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "creatorID": {
                                "type": "string"
                              },
                              "youtube": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "rawId": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "thumbnailURL": {
                                    "type": "string"
                                  },
                                  "publishedAt": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "date-time"
                                  },
                                  "subscriberCount": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "rawId",
                                  "name",
                                  "description",
                                  "thumbnailURL",
                                  "publishedAt",
                                  "subscriberCount"
                                ]
                              },
                              "twitch": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "rawId": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "thumbnailURL": {
                                    "type": "string"
                                  },
                                  "publishedAt": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "date-time"
                                  },
                                  "subscriberCount": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "rawId",
                                  "name",
                                  "description",
                                  "thumbnailURL",
                                  "publishedAt",
                                  "subscriberCount"
                                ]
                              },
                              "twitCasting": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "rawId": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "thumbnailURL": {
                                    "type": "string"
                                  },
                                  "publishedAt": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "date-time"
                                  },
                                  "subscriberCount": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "rawId",
                                  "name",
                                  "description",
                                  "thumbnailURL",
                                  "publishedAt",
                                  "subscriberCount"
                                ]
                              },
                              "niconico": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "rawId": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "thumbnailURL": {
                                    "type": "string"
                                  },
                                  "publishedAt": {
                                    "type": "string",
                                    "nullable": true,
                                    "format": "date-time"
                                  },
                                  "subscriberCount": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "rawId",
                                  "name",
                                  "description",
                                  "thumbnailURL",
                                  "publishedAt",
                                  "subscriberCount"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "creatorID",
                              "youtube",
                              "twitch",
                              "twitCasting",
                              "niconico"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "memberType",
                          "thumbnailURL",
                          "channel"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer",
                          "description": "Current Page",
                          "example": 1
                        },
                        "prevPage": {
                          "type": "integer",
                          "description": "Previous Page",
                          "example": 1
                        },
                        "nextPage": {
                          "type": "integer",
                          "description": "Next Page",
                          "example": 1
                        },
                        "totalPage": {
                          "type": "integer",
                          "description": "Total Pages",
                          "example": 1
                        },
                        "totalCount": {
                          "type": "integer",
                          "description": "Total Count",
                          "example": 1
                        },
                        "hasNext": {
                          "type": "boolean",
                          "description": "Has Next",
                          "example": true
                        }
                      },
                      "required": [
                        "currentPage",
                        "totalPage",
                        "totalCount",
                        "hasNext"
                      ]
                    }
                  },
                  "required": ["creators", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/streams/search": {
      "post": {
        "tags": ["Stream"],
        "operationId": "postStream",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "streamIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["streamIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The configuration for an api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "videos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "rawId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "languageCode": {
                            "type": "string",
                            "enum": [
                              "en",
                              "ja",
                              "fr",
                              "de",
                              "es",
                              "cn",
                              "tw",
                              "ko",
                              "default"
                            ]
                          },
                          "rawChannelID": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "youtube",
                              "twitch",
                              "twitcasting",
                              "niconico",
                              "unknown"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "thumbnailURL": {
                            "type": "string"
                          },
                          "creatorName": {
                            "type": "string"
                          },
                          "creatorThumbnailURL": {
                            "type": "string"
                          },
                          "viewCount": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "link": {
                            "type": "string"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false
                          },
                          "translated": {
                            "type": "boolean"
                          },
                          "status": {
                            "type": "string",
                            "enum": ["live", "upcoming", "ended", "unknown"]
                          },
                          "startedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          },
                          "endedAt": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "rawId",
                          "title",
                          "languageCode",
                          "rawChannelID",
                          "description",
                          "publishedAt",
                          "platform",
                          "tags",
                          "thumbnailURL",
                          "viewCount",
                          "status",
                          "startedAt",
                          "endedAt"
                        ],
                        "description": "Stream",
                        "example": {
                          "id": "O0XCK3NhzqE",
                          "rawId": "O0XCK3NhzqE",
                          "title": "【APEX】ランドマークは溶岩になった！！#三清傑WIN w/まつりちゃん,えるちゃん【ぶいすぽっ！/ 藍沢エマ】",
                          "languageCode": "ja",
                          "rawChannelID": "UCPkKpOHxEDcwmUAnRpIu-Ng",
                          "description": "ぶいすぽっ！所属の藍沢エマです！\nApexの配信をします！\nチャンネル登録、高評価よろしくお願いします！",
                          "publishedAt": "2023-05-20T12:00:00.000Z",
                          "startedAt": "2023-05-20T12:00:00.000Z",
                          "endedAt": "2023-05-20T15:30:00.000Z",
                          "platform": "youtube",
                          "status": "ended",
                          "tags": [
                            "APEX",
                            "ぶいすぽっ！",
                            "藍沢エマ",
                            "三清傑"
                          ],
                          "viewCount": 125000,
                          "thumbnailURL": "https://i.ytimg.com/vi/O0XCK3NhzqE/hqdefault_live.jpg",
                          "creatorName": "藍沢エマ",
                          "creatorThumbnailURL": "https://yt3.googleusercontent.com/oIps6UVvqtpJykcdjYYyRvhdcyVoR1wAdH8CnTp4msMaKYdn8XMLj4FHsLoqfWaJzbLJKSPjCg=s176-c-k-c0x00ffffff-no-rj",
                          "deleted": false,
                          "translated": false
                        }
                      }
                    }
                  },
                  "required": ["videos"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/clips": {
      "get": {
        "tags": ["Clip"],
        "operationId": "listClips",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Maximum number of items to retrieve per page",
              "example": "10"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Page number to start retrieving items(starts from 1)",
              "example": "1"
            },
            "required": true,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "youtube",
                "twitch",
                "twitcasting",
                "niconico",
                "unknown"
              ],
              "description": "Platform",
              "example": "youtube"
            },
            "required": false,
            "name": "platform",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["clip", "short"],
              "default": "clip",
              "description": "Clip Type",
              "example": "clip"
            },
            "required": false,
            "name": "clipType",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "default",
              "description": "Language Code",
              "example": "en"
            },
            "required": false,
            "name": "languageCode",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc",
              "description": "Order By",
              "example": "desc"
            },
            "required": false,
            "name": "orderBy",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["publishedAt", "viewCount"],
              "default": "publishedAt",
              "description": "Order Key",
              "example": "publishedAt"
            },
            "required": false,
            "name": "orderKey",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "After Published At Date",
              "example": "2023-05-20T12:00:00.000Z"
            },
            "required": false,
            "name": "afterPublishedAtDate",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Before Published At Date",
              "example": "2023-05-20T12:00:00.000Z"
            },
            "required": false,
            "name": "beforePublishedAtDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The configuration for an api",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clips": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "rawId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "languageCode": {
                            "type": "string",
                            "enum": [
                              "en",
                              "ja",
                              "fr",
                              "de",
                              "es",
                              "cn",
                              "tw",
                              "ko",
                              "default"
                            ]
                          },
                          "rawChannelID": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "youtube",
                              "twitch",
                              "twitcasting",
                              "niconico",
                              "unknown"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "thumbnailURL": {
                            "type": "string"
                          },
                          "creatorName": {
                            "type": "string"
                          },
                          "creatorThumbnailURL": {
                            "type": "string"
                          },
                          "viewCount": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "link": {
                            "type": "string"
                          },
                          "deleted": {
                            "type": "boolean",
                            "default": false
                          },
                          "translated": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["short", "clip"]
                          }
                        },
                        "required": [
                          "id",
                          "rawId",
                          "title",
                          "languageCode",
                          "rawChannelID",
                          "description",
                          "publishedAt",
                          "platform",
                          "tags",
                          "thumbnailURL",
                          "viewCount",
                          "type"
                        ],
                        "description": "Clip",
                        "example": {
                          "id": "O0XCK3NhzqE",
                          "rawId": "O0XCK3NhzqE",
                          "title": "【APEX】ランドマークは溶岩になった！！#三清傑WIN w/まつりちゃん,えるちゃん【ぶいすぽっ！/ 藍沢エマ】",
                          "languageCode": "ja",
                          "rawChannelID": "UCPkKpOHxEDcwmUAnRpIu-Ng",
                          "description": "ぶいすぽっ！所属の藍沢エマです！\nApexの配信をします！\nチャンネル登録、高評価よろしくお願いします！",
                          "publishedAt": "2023-05-20T12:00:00.000Z",
                          "platform": "youtube",
                          "tags": [
                            "APEX",
                            "ぶいすぽっ！",
                            "藍沢エマ",
                            "三清傑"
                          ],
                          "viewCount": 125000,
                          "thumbnailURL": "https://i.ytimg.com/vi/O0XCK3NhzqE/hqdefault_live.jpg",
                          "creatorName": "藍沢エマ",
                          "creatorThumbnailURL": "https://yt3.googleusercontent.com/oIps6UVvqtpJykcdjYYyRvhdcyVoR1wAdH8CnTp4msMaKYdn8XMLj4FHsLoqfWaJzbLJKSPjCg=s176-c-k-c0x00ffffff-no-rj",
                          "deleted": false,
                          "translated": false,
                          "type": "clip"
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer",
                          "description": "Current Page",
                          "example": 1
                        },
                        "prevPage": {
                          "type": "integer",
                          "description": "Previous Page",
                          "example": 1
                        },
                        "nextPage": {
                          "type": "integer",
                          "description": "Next Page",
                          "example": 1
                        },
                        "totalPage": {
                          "type": "integer",
                          "description": "Total Pages",
                          "example": 1
                        },
                        "totalCount": {
                          "type": "integer",
                          "description": "Total Count",
                          "example": 1
                        },
                        "hasNext": {
                          "type": "boolean",
                          "description": "Has Next",
                          "example": true
                        }
                      },
                      "required": [
                        "currentPage",
                        "totalPage",
                        "totalCount",
                        "hasNext"
                      ]
                    }
                  },
                  "required": ["clips", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": ["Event"],
        "operationId": "listEvents",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Maximum number of items to retrieve per page",
              "example": "10"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "Page number to start retrieving items(starts from 1)",
              "example": "1"
            },
            "required": true,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["public", "private", "internal"],
              "description": "Filter by visibility status",
              "example": "public"
            },
            "required": false,
            "name": "visibility",
            "in": "query",
            "style": "form",
            "explode": false
          },
          {
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc",
              "description": "Order By start time",
              "example": "desc"
            },
            "required": false,
            "name": "orderBy",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Start datetime (ISO format)",
              "example": "2023-12-01T10:00:00.000Z"
            },
            "required": false,
            "name": "startAt",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "End datetime (ISO format)",
              "example": "2023-12-01T18:00:00.000Z"
            },
            "required": false,
            "name": "endAt",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Event ID",
                            "example": "event-123456"
                          },
                          "title": {
                            "type": "string",
                            "description": "Event title",
                            "example": "ぶいすぽっ！感謝祭2023"
                          },
                          "storageFileId": {
                            "type": "string",
                            "description": "Storage file ID containing event details",
                            "example": "file-abcdef"
                          },
                          "startAt": {
                            "type": "string",
                            "description": "Event start datetime (ISO format)",
                            "example": "2023-12-01T10:00:00.000Z"
                          },
                          "endAt": {
                            "type": "string",
                            "description": "Event end datetime (ISO format)",
                            "example": "2023-12-01T18:00:00.000Z"
                          },
                          "visibility": {
                            "type": "string",
                            "enum": ["public", "private", "internal"],
                            "description": "Event visibility status",
                            "example": "public"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Creation datetime",
                            "example": "2023-11-15T08:00:00.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "Last update datetime",
                            "example": "2023-11-15T08:00:00.000Z"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "storageFileId",
                          "visibility",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "currentPage": {
                          "type": "integer",
                          "description": "Current Page",
                          "example": 1
                        },
                        "prevPage": {
                          "type": "integer",
                          "description": "Previous Page",
                          "example": 1
                        },
                        "nextPage": {
                          "type": "integer",
                          "description": "Next Page",
                          "example": 1
                        },
                        "totalPage": {
                          "type": "integer",
                          "description": "Total Pages",
                          "example": 1
                        },
                        "totalCount": {
                          "type": "integer",
                          "description": "Total Count",
                          "example": 1
                        },
                        "hasNext": {
                          "type": "boolean",
                          "description": "Has Next",
                          "example": true
                        }
                      },
                      "required": [
                        "currentPage",
                        "totalPage",
                        "totalCount",
                        "hasNext"
                      ]
                    }
                  },
                  "required": ["events", "pagination"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Event"],
        "operationId": "createEvent",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Event title",
                    "example": "ぶいすぽっ！感謝祭2023"
                  },
                  "storageFileId": {
                    "type": "string",
                    "description": "Storage file ID containing event details",
                    "example": "file-abcdef"
                  },
                  "startAt": {
                    "type": "string",
                    "description": "Event start datetime (ISO format)",
                    "example": "2023-12-01T10:00:00.000Z"
                  },
                  "endAt": {
                    "type": "string",
                    "description": "Event end datetime (ISO format)",
                    "example": "2023-12-01T18:00:00.000Z"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["public", "private", "internal"],
                    "default": "private",
                    "description": "Event visibility status",
                    "example": "private"
                  }
                },
                "required": ["title", "storageFileId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Event ID",
                      "example": "event-123456"
                    },
                    "title": {
                      "type": "string",
                      "description": "Event title",
                      "example": "ぶいすぽっ！感謝祭2023"
                    },
                    "storageFileId": {
                      "type": "string",
                      "description": "Storage file ID containing event details",
                      "example": "file-abcdef"
                    },
                    "startAt": {
                      "type": "string",
                      "description": "Event start datetime (ISO format)",
                      "example": "2023-12-01T10:00:00.000Z"
                    },
                    "endAt": {
                      "type": "string",
                      "description": "Event end datetime (ISO format)",
                      "example": "2023-12-01T18:00:00.000Z"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": ["public", "private", "internal"],
                      "description": "Event visibility status",
                      "example": "public"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation datetime",
                      "example": "2023-11-15T08:00:00.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Last update datetime",
                      "example": "2023-11-15T08:00:00.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "storageFileId",
                    "visibility",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "tags": ["Event"],
        "operationId": "getEvent",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Event ID",
              "example": "event-123456"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Event details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Event ID",
                      "example": "event-123456"
                    },
                    "title": {
                      "type": "string",
                      "description": "Event title",
                      "example": "ぶいすぽっ！感謝祭2023"
                    },
                    "storageFileId": {
                      "type": "string",
                      "description": "Storage file ID containing event details",
                      "example": "file-abcdef"
                    },
                    "startAt": {
                      "type": "string",
                      "description": "Event start datetime (ISO format)",
                      "example": "2023-12-01T10:00:00.000Z"
                    },
                    "endAt": {
                      "type": "string",
                      "description": "Event end datetime (ISO format)",
                      "example": "2023-12-01T18:00:00.000Z"
                    },
                    "visibility": {
                      "type": "string",
                      "enum": ["public", "private", "internal"],
                      "description": "Event visibility status",
                      "example": "public"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation datetime",
                      "example": "2023-11-15T08:00:00.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Last update datetime",
                      "example": "2023-11-15T08:00:00.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "storageFileId",
                    "visibility",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    }
  }
}
