name: "CI for PR (Terraform/Blue)"
on:
  pull_request:
    branches:
      - main
    paths:
      - 'deployment/blue/**'
      - 'deployment/modules/**'
  workflow_dispatch:

defaults:
  run:
    shell: bash
permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  ci:
    name: "CI"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Find Directories"
        id: find_dirs
        run: echo "::set-output name=dirs::$(find deployment/blue deployment/modules -type d -not -path '*/\.*')"

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
          terraform_wrapper: false
          cli_config_credentials_token: "${{ secrets.TF_CLOUD_CREDENTIALS_TOKEN }}"

      - name: "Terraform Init"
        id: init
        run: |
          for dir in ${{ steps.find_dirs.outputs.dirs }}; do
            echo "Initializing $dir"
            (cd $dir && terraform init)
          done

      - name: "Run fmt"
        id: fmt
        run: |
          for dir in ${{ steps.find_dirs.outputs.dirs }}; do
            echo "Running terraform fmt in $dir"
            (cd $dir && terraform fmt -check -recursive)
          done

      - name: "Run Validate"
        id: validate
        run: |
          for dir in ${{ steps.find_dirs.outputs.dirs }}; do
            echo "Validating $dir"
            (cd $dir && terraform validate -no-color)
          done

      - name: "Setup TFLint"
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: "Run TFLint"
        id: tflint
        run: |
          for dir in ${{ steps.find_dirs.outputs.dirs }}; do
            if [[ $dir == *"deployment/blue"* ]]; then
              echo "Running tflint in $dir"
              (cd $dir && tflint -f compact)
            fi
          done

      - name: "Terraform Plan"
        id: plan
        run: |
          if [[ "deployment/blue" == *"deployment/blue"* ]]; then
            echo "Planning deployment/blue"
            (cd deployment/blue && terraform plan)
          fi
        continue-on-error: true
