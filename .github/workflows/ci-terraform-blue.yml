name: "CI for PR (Terraform/Blue)"
on:
  pull_request:
    branches:
      - main
    paths:
      - 'deployment/blue/**'
      - 'deployment/modules/**'
  workflow_dispatch:

defaults:
  run:
    shell: bash
permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  ci:
    name: "CI"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory:
          - deployment/blue
          - deployment/modules/artifact_registry
          - deployment/modules/iam

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2
          terraform_wrapper: false
          cli_config_credentials_token: "${{ secrets.TF_CLOUD_CREDENTIALS_TOKEN }}"

      - name: "Terraform Init"
        id: init
        working-directory: deployment/blue
        run: terraform init

      - name: "Setup TFLint"
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: "Run TFLint"
        id: tflint
        working-directory: deployment/blue
        run: tflint -f compact

      - name: "Run fmt"
        id: fmt
        working-directory: ${{ matrix.directory }}
        run: terraform fmt -check -recursive

      - name: "Run Validate"
        id: validate
        working-directory: deployment/blue
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        working-directory: deployment/blue
        run: terraform plan
        continue-on-error: true

      - name: "Create comment for PR (Terraform fmt/init/validate/plan)"
        uses: actions/github-script@v7
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}\n${{ steps.plan.outputs.stderr }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Checks for Module: \`${{ matrix.directory }}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Validation üß™\`${{ steps.validate.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### TFLint üëì\`${{ steps.tflint.outcome }}\`
            #### Terraform Plan (only for main deployment) üìñ\`${{ steps.plan.outcome }}\` if ('${{ matrix.directory }}' == 'deployment/blue')

            </details>

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
